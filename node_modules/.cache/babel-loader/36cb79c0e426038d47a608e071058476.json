{"ast":null,"code":"var _jsxFileName = \"/Users/weiyun/wy_code/learn-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM, { findDOMNode } from 'react-dom'; //import './demo0.js'\n\nimport './index.css';\nimport Confirm from './demo0.js';\nimport * as serviceWorker from './serviceWorker'; // 请写一个满足以下要求的confirm方法组件（可以参考一下 ， antd 的 Modal 组件的 Modal.info, Modal.waring . 这样的用法 ）：\n//\n// （1）能在任意组件(示例如下)的componentDidMount生命周期中挂载，并返回一个promise；\n//\n// （2）能通过返回值判断用户点击的是确定还是取消。\n//\n//\n//\n// async componentDidMount(){\n//     let res = await confirm(\"确定删除吗\")\n//     if(res) {\n//         console.log(\"是\")\n//     } else {\n//         console.log(\"否\")\n//     }\n// }\n\nfunction confirm(props) {\n  console.log(props);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Confirm, {\n    width: '520px',\n    height: '520px',\n    visible: props.visible,\n    title: props.title,\n    content: props.content,\n    opacit: 0.66,\n    onOk: props.onOk,\n    onCancel: props.onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      title: 'React Modal',\n      content: '欢迎使用！'\n    };\n  }\n\n  openModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  onOk() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  onCancel() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u6B22\\u8FCE\\u4F7F\\u7528\", React.createElement(\"button\", {\n      onClick: this.openModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"modal\"));\n  }\n\n  async componentDidMount() {\n    let res = await confirm({\n      width: '520px',\n      height: '520px',\n      visible: this.state.visible,\n      title: this.state.title,\n      content: this.state.content,\n      opacit: 0.66,\n      onOk: this.onOk.bind(this),\n      onCancel: this.onCancel.bind(this)\n    });\n\n    if (res) {\n      let body = document.getElementById('root');\n      this.container = document.createElement('div');\n      this.container.id = 'modal';\n      body.appendChild(this.container);\n      ReactDOM.render(res, document.getElementById('modal'));\n      console.log(\"是\");\n    } else {\n      console.log(\"否\");\n    }\n  }\n\n  componentDidUpdate() {\n    this.setState({\n      visible: this.props.visible\n    });\n    console.log('update', this.props.visible);\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/weiyun/wy_code/learn-react/src/index.js"],"names":["React","ReactDOM","findDOMNode","Confirm","serviceWorker","confirm","props","console","log","visible","title","content","onOk","onCancel","App","Component","constructor","state","openModal","setState","render","bind","componentDidMount","res","width","height","opacit","body","document","getElementById","container","createElement","id","appendChild","componentDidUpdate","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM,{ findDOMNode }  from 'react-dom';\n//import './demo0.js'\nimport './index.css';\nimport Confirm from './demo0.js';\nimport * as serviceWorker from './serviceWorker';\n\n\n// 请写一个满足以下要求的confirm方法组件（可以参考一下 ， antd 的 Modal 组件的 Modal.info, Modal.waring . 这样的用法 ）：\n//\n// （1）能在任意组件(示例如下)的componentDidMount生命周期中挂载，并返回一个promise；\n//\n// （2）能通过返回值判断用户点击的是确定还是取消。\n//\n//\n//\n// async componentDidMount(){\n//     let res = await confirm(\"确定删除吗\")\n//     if(res) {\n//         console.log(\"是\")\n//     } else {\n//         console.log(\"否\")\n//     }\n// }\n\nfunction confirm(props){\n    console.log(props);\n    return (\n        <div>\n            <Confirm\n                width={'520px'}\n                height={'520px'}\n                visible={props.visible}\n                title={props.title}\n                content={props.content}\n                opacit={0.66}\n                onOk={props.onOk}\n                onCancel={props.onCancel}\n            />\n\n        </div>\n    )\n\n}\n\n\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            visible: false,\n            title: 'React Modal',\n            content: '欢迎使用！',\n        }\n    }\n    openModal(){\n        this.setState({visible:true});\n    }\n    onOk(){\n        this.setState({visible:false});\n    }\n    onCancel(){\n        this.setState({visible:false});\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                欢迎使用\n                <button onClick={this.openModal.bind(this)}>modal</button>\n            </div>\n        );\n    }\n\n    async componentDidMount(){\n        let res =  await confirm(\n            {\n                width:'520px',\n                height:'520px',\n                visible:this.state.visible,\n                title:this.state.title,\n                content:this.state.content,\n                opacit:0.66,\n                onOk:this.onOk.bind(this),\n                onCancel:this.onCancel.bind(this)\n            }\n        )\n        if(res) {\n            let body = document.getElementById('root')\n            this.container = document.createElement('div');\n            this.container.id = 'modal';\n            body.appendChild(this.container);\n            ReactDOM.render(res, document.getElementById('modal'));\n            console.log(\"是\")\n        } else {\n            console.log(\"否\")\n        }\n\n\n    }\n    componentDidUpdate() {\n        this.setState({visible:this.props.visible});\n        console.log('update',this.props.visible)\n    }\n\n}\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}