{"ast":null,"code":"var _jsxFileName = \"/Users/weiyun/wy_code/learn-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //import './demo0.js'\n\nimport './index.css';\nimport Confirm from './demo0.js';\nimport * as serviceWorker from './serviceWorker'; // 请写一个满足以下要求的confirm方法组件（可以参考一下 ， antd 的 Modal 组件的 Modal.info, Modal.waring . 这样的用法 ）：\n//\n// （1）能在任意组件(示例如下)的componentDidMount生命周期中挂载，并返回一个promise；\n//\n// （2）能通过返回值判断用户点击的是确定还是取消。\n//\n//\n//\n// async componentDidMount(){\n//     let res = await confirm(\"确定删除吗\")\n//     if(res) {\n//         console.log(\"是\")\n//     } else {\n//         console.log(\"否\")\n//     }\n// }\n\nfunction confirm(props) {\n  this.state = {\n    visible: false,\n    title: 'React Modal',\n    content: '欢迎使用！'\n  };\n\n  function openModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  function onOk() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  function onCancel() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  return {\n    render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: openModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"\\u5F00\\u542F\\u5F39\\u7A97\"), React.createElement(Confirm, {\n        width: '520px',\n        height: '520px',\n        visible: props.visible,\n        title: props.title,\n        content: props.content,\n        opacit: 0.66,\n        onOk: onOk,\n        onCancel: onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      title: 'React Modal',\n      content: '欢迎使用！'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    });\n  }\n\n  async componentDidMount() {\n    console.log(this.props);\n    let res = await confirm(this.props);\n\n    if (res) {\n      console.log(\"是\");\n    } else {\n      console.log(\"否\");\n    }\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/weiyun/wy_code/learn-react/src/index.js"],"names":["React","ReactDOM","Confirm","serviceWorker","confirm","props","state","visible","title","content","openModal","setState","onOk","onCancel","render","App","Component","constructor","componentDidMount","console","log","res","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AACnB,OAAKC,KAAL,GAAa;AACTC,IAAAA,OAAO,EAAE,KADA;AAETC,IAAAA,KAAK,EAAE,aAFE;AAGTC,IAAAA,OAAO,EAAE;AAHA,GAAb;;AAKA,WAASC,SAAT,GAAoB;AAChB,SAAKC,QAAL,CAAc;AACVJ,MAAAA,OAAO,EAAE;AADC,KAAd;AAGH;;AACD,WAASK,IAAT,GAAe;AACX,SAAKD,QAAL,CAAc;AACVJ,MAAAA,OAAO,EAAC;AADE,KAAd;AAGH;;AACD,WAASM,QAAT,GAAmB;AACf,SAAKF,QAAL,CAAc;AACVJ,MAAAA,OAAO,EAAC;AADE,KAAd;AAGH;;AACD,SACI;AACIO,IAAAA,MAAM,GAAE;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,OAAO,EAAEJ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI,oBAAC,OAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,MAAM,EAAE,OAFZ;AAGI,QAAA,OAAO,EAAEL,KAAK,CAACE,OAHnB;AAII,QAAA,KAAK,EAAEF,KAAK,CAACG,KAJjB;AAKI,QAAA,OAAO,EAAEH,KAAK,CAACI,OALnB;AAMI,QAAA,MAAM,EAAE,IANZ;AAOI,QAAA,IAAI,EAAEG,IAPV;AAQI,QAAA,QAAQ,EAAEC,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAiBH;;AAnBL,GADJ;AA2BH;;AAED,MAAME,GAAN,SAAkBf,KAAK,CAACgB,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACZ,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,KAAK,EAAE,aAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKH;;AAIDK,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AAGD,QAAMI,iBAAN,GAAyB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACA,QAAIgB,GAAG,GAAG,MAAMjB,OAAO,CAAC,KAAKC,KAAN,CAAvB;;AACA,QAAGgB,GAAH,EAAQ;AACJF,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH;AACJ;;AA/B4B;;AAsCjCnB,QAAQ,CAACa,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './demo0.js'\nimport './index.css';\nimport Confirm from './demo0.js';\nimport * as serviceWorker from './serviceWorker';\n\n\n// 请写一个满足以下要求的confirm方法组件（可以参考一下 ， antd 的 Modal 组件的 Modal.info, Modal.waring . 这样的用法 ）：\n//\n// （1）能在任意组件(示例如下)的componentDidMount生命周期中挂载，并返回一个promise；\n//\n// （2）能通过返回值判断用户点击的是确定还是取消。\n//\n//\n//\n// async componentDidMount(){\n//     let res = await confirm(\"确定删除吗\")\n//     if(res) {\n//         console.log(\"是\")\n//     } else {\n//         console.log(\"否\")\n//     }\n// }\n\nfunction confirm(props){\n    this.state = {\n        visible: false,\n        title: 'React Modal',\n        content: '欢迎使用！',\n    }\n    function openModal(){\n        this.setState({\n            visible: true\n        })\n    }\n    function onOk(){\n        this.setState({\n            visible:false\n        })\n    }\n    function onCancel(){\n        this.setState({\n            visible:false\n        })\n    }\n    return (\n        {\n            render(){\n                return (\n                    <div className=\"App\">\n                        <div onClick={openModal}>开启弹窗</div>\n                        <Confirm\n                            width={'520px'}\n                            height={'520px'}\n                            visible={props.visible}\n                            title={props.title}\n                            content={props.content}\n                            opacit={0.66}\n                            onOk={onOk}\n                            onCancel={onCancel}\n                        />\n\n                    </div>\n                )\n\n            }\n        }\n\n\n\n    );\n\n}\n\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            visible: false,\n            title: 'React Modal',\n            content: '欢迎使用！',\n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <div className=\"App\">\n\n            </div>\n\n        );\n    }\n\n\n    async componentDidMount(){\n        console.log(this.props);\n        let res = await confirm(this.props)\n        if(res) {\n            console.log(\"是\")\n        } else {\n            console.log(\"否\")\n        }\n    }\n\n}\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}