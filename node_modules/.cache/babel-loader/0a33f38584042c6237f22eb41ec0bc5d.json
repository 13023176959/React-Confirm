{"ast":null,"code":"var _jsxFileName = \"/Users/weiyun/wy_code/learn-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //import './demo0.js'\n\nimport './index.css';\nimport Confirm from './demo0.js';\nimport * as serviceWorker from './serviceWorker'; // 请写一个满足以下要求的confirm方法组件（可以参考一下 ， antd 的 Modal 组件的 Modal.info, Modal.waring . 这样的用法 ）：\n//\n// （1）能在任意组件(示例如下)的componentDidMount生命周期中挂载，并返回一个promise；\n//\n// （2）能通过返回值判断用户点击的是确定还是取消。\n//\n//\n//\n// async componentDidMount(){\n//     let res = await confirm(\"确定删除吗\")\n//     if(res) {\n//         console.log(\"是\")\n//     } else {\n//         console.log(\"否\")\n//     }\n// }\n\nfunction confirm(props) {\n  function openModal() {\n    props.visible = true;\n  }\n\n  function onOk() {\n    props.visible = false;\n  }\n\n  function onCancel() {\n    props.visible = false;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: openModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\u5F00\\u542F\\u5F39\\u7A97\"), React.createElement(Confirm, {\n    width: '520px',\n    height: '520px',\n    visible: props.visible,\n    title: props.title,\n    content: props.content,\n    opacit: 0.66,\n    onOk: onOk,\n    onCancel: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      title: 'React Modal',\n      content: '欢迎使用！'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.setState({\n        visible: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n  async componentDidMount() {\n    console.log(this.props);\n    let res = await confirm({\n      width: '520px',\n      height: '520px',\n      visible: this.state.visible,\n      title: this.state.title,\n      content: this.state.content,\n      opacit: 0.66\n    });\n\n    if (res) {\n      console.log(\"是\");\n    } else {\n      console.log(\"否\");\n    }\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/weiyun/wy_code/learn-react/src/index.js"],"names":["React","ReactDOM","Confirm","serviceWorker","confirm","props","openModal","visible","onOk","onCancel","title","content","App","Component","constructor","state","render","setState","componentDidMount","console","log","res","width","height","opacit","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AACnB,WAASC,SAAT,GAAoB;AAChBD,IAAAA,KAAK,CAACE,OAAN,GAAe,IAAf;AACH;;AACD,WAASC,IAAT,GAAe;AACXH,IAAAA,KAAK,CAACE,OAAN,GAAe,KAAf;AACH;;AACD,WAASE,QAAT,GAAmB;AACfJ,IAAAA,KAAK,CAACE,OAAN,GAAe,KAAf;AACH;;AACD,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,OAAO,EAAED,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI,oBAAC,OAAD;AACI,IAAA,KAAK,EAAE,OADX;AAEI,IAAA,MAAM,EAAE,OAFZ;AAGI,IAAA,OAAO,EAAED,KAAK,CAACE,OAHnB;AAII,IAAA,KAAK,EAAEF,KAAK,CAACK,KAJjB;AAKI,IAAA,OAAO,EAAEL,KAAK,CAACM,OALnB;AAMI,IAAA,MAAM,EAAE,IANZ;AAOI,IAAA,IAAI,EAAEH,IAPV;AAQI,IAAA,QAAQ,EAAEC,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAiBH;;AAED,MAAMG,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACT,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKU,KAAL,GAAa;AACTR,MAAAA,OAAO,EAAE,KADA;AAETG,MAAAA,KAAK,EAAE,aAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKH;;AACDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAC;AAAT,OAAd,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AAED,QAAMW,iBAAN,GAAyB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACA,QAAIgB,GAAG,GAAG,MAAMjB,OAAO,CACnB;AACIkB,MAAAA,KAAK,EAAC,OADV;AAEIC,MAAAA,MAAM,EAAC,OAFX;AAGIhB,MAAAA,OAAO,EAAC,KAAKQ,KAAL,CAAWR,OAHvB;AAIIG,MAAAA,KAAK,EAAC,KAAKK,KAAL,CAAWL,KAJrB;AAKIC,MAAAA,OAAO,EAAC,KAAKI,KAAL,CAAWJ,OALvB;AAMIa,MAAAA,MAAM,EAAC;AANX,KADmB,CAAvB;;AAUA,QAAGH,GAAH,EAAQ;AACJF,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH;AACJ;;AApC4B;;AA2CjCnB,QAAQ,CAACe,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './demo0.js'\nimport './index.css';\nimport Confirm from './demo0.js';\nimport * as serviceWorker from './serviceWorker';\n\n\n// 请写一个满足以下要求的confirm方法组件（可以参考一下 ， antd 的 Modal 组件的 Modal.info, Modal.waring . 这样的用法 ）：\n//\n// （1）能在任意组件(示例如下)的componentDidMount生命周期中挂载，并返回一个promise；\n//\n// （2）能通过返回值判断用户点击的是确定还是取消。\n//\n//\n//\n// async componentDidMount(){\n//     let res = await confirm(\"确定删除吗\")\n//     if(res) {\n//         console.log(\"是\")\n//     } else {\n//         console.log(\"否\")\n//     }\n// }\n\nfunction confirm(props){\n    function openModal(){\n        props.visible= true;\n    }\n    function onOk(){\n        props.visible= false;\n    }\n    function onCancel(){\n        props.visible= false;\n    }\n    return (\n        <div className=\"App\">\n            <div onClick={openModal}>开启弹窗</div>\n            <Confirm\n                width={'520px'}\n                height={'520px'}\n                visible={props.visible}\n                title={props.title}\n                content={props.content}\n                opacit={0.66}\n                onOk={onOk}\n                onCancel={onCancel}\n            />\n\n        </div>\n    )\n\n}\n\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            visible: false,\n            title: 'React Modal',\n            content: '欢迎使用！',\n        }\n    }\n    render() {\n        return (\n            <div className=\"App\">\n\n                <button onClick={()=>this.setState({visible:true})}></button>\n            </div>\n\n        );\n    }\n\n    async componentDidMount(){\n        console.log(this.props);\n        let res = await confirm(\n            {\n                width:'520px',\n                height:'520px',\n                visible:this.state.visible,\n                title:this.state.title,\n                content:this.state.content,\n                opacit:0.66,\n            }\n        )\n        if(res) {\n            console.log(\"是\")\n        } else {\n            console.log(\"否\")\n        }\n    }\n\n}\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}